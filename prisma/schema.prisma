// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  role          Role            @default(USER)
  emailVerified DateTime?
  image         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  transactions  Transaction[]
  categories    Category[]
  budgets       Budget[]
  financialGoals FinancialGoal[]
}

enum Role {
  USER
  ADMIN
}

model Transaction {
  id          String    @id @default(cuid())
  amount      Float
  description String?
  date        DateTime  @default(now())
  type        TransactionType
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Category {
  id           String       @id @default(cuid())
  name         String
  type         TransactionType
  color        String?
  icon         String?
  userId       String
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets      Budget[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@unique([name, userId, type])
}

model Budget {
  id          String    @id @default(cuid())
  name        String
  amount      Float
  spent       Float     @default(0)
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id])
  period      String    // week, month, quarter, year
  startDate   DateTime
  endDate     DateTime
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model FinancialGoal {
  id            String    @id @default(cuid())
  name          String
  targetAmount  Float
  currentAmount Float     @default(0)
  deadline      DateTime
  description   String?
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

